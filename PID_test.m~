%include the dynamics of a 2 link robot, 
%add a mass and gravity and check the deflection
%use ODE45 for the dynamics of the 2 link arm 

tspan = [0 5];
tspan_slice = linspace(0, 5, 1000);
torque = [5; 5];
m1 = .5;
m2 = .5;
l1 = 40/1000;
r2 = 50/1000;
r1 = 50/1000;
I1 = .5;
I2 = .5;
l2 = 50/1000;
l3 = l2;
l4 = l2;
robot_arm = FiveBarLinkage(l1,l2,l3,l4, m1, m2,r2, r1, I1, I2);
P = .125;
I = .00005;
D = .7;
set_point = [-.02, .1]; %meters in workspace
new_thetas_veloc = [0,0];
curr_theta = [1.5,1.5];
I_error_min = -1;
I_error_max = 1;
time = 0;
figure();
hold on;
axis([-1, 1, -1, 1]);
err = [0,0];
pause on;
I_error = [0,0];
for i = tspan_slice
    pause(.01);
    time = time + 1;
    [t, y] = ode45(@(t, x) robot_arm.two_link_dynamics(t, x, torque),i, [5; 5; 0; 0]);
    curr_theta = curr_theta + new_thetas_veloc;
    curr_point = robot_arm.fk(curr_theta);
    last_error = err;
    err = set_point - curr_point
    I_error = I_error + err;
    if(I_error < I_error_min) 
        I_error = I_error_min;
    end
    if(I_error > I_error_max) 
        I_error = I_error_max;
    end
    new_thetas_veloc = P*err + I*I_error - D*(err - last_error);
    plot(curr_point(1), curr_point(2), "g+");
    plot(set_point(1), set_point(2), "r.");
end